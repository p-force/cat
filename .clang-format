  # Определяет отступ для модификаторов доступа (например, public, protected, private) в классах. Значение -4 означает, что модификаторы будут выровнены на 4 пробела влево относительно основного тела класса.
AccessModifierOffset: -4
  # Определяет, как выравнивать аргументы или параметры после открывающей скобки (. Значение Align означает, что они будут выравнены по первой позиции после открывающей скобки.
AlignAfterOpenBracket: Align
  # Указывает, выравнивать ли подряд идущие операторы присваивания. Значение false означает, что они не будут выравниваться по вертикали.
AlignConsecutiveAssignments: false
  # Указывает, выравнивать ли подряд идущие объявления переменных. Значение false означает, что они не будут выравниваться по вертикали.
AlignConsecutiveDeclarations: false
  # Определяет выравнивание строк, которые были перенесены с использованием символа \ (экранированные символы новой строки). Значение Left означает, что они будут выравниваться по левому краю.
AlignEscapedNewlines: Left
  # Указывает, выравнивать ли операнды бинарных операций. Значение true означает, что операнды будут выравнены по вертикали.
AlignOperands: true
  # Указывает, выравнивать ли завершающие комментарии по вертикали. Значение false означает, что комментарии не будут выравниваться.
AlignTrailingComments: false
  # Указывает, разрешать ли перенос всех параметров объявления функции на следующую строку. Значение false означает, что параметры должны оставаться на той же строке, что и имя функции, если это возможно.
AllowAllParametersOfDeclarationOnNextLine: false
  # Указывает, разрешать ли короткие блоки кода оставаться на одной строке. Значение false означает, что даже короткие блоки должны быть перенесены на новые строки.
AllowShortBlocksOnASingleLine: false
  # Указывает, разрешать ли короткие метки case в операторах switch оставаться на одной строке. Значение false означает, что каждая метка case должна быть на новой строке.
AllowShortCaseLabelsOnASingleLine: false
  # Указывает, разрешать ли короткие функции оставаться на одной строке. Значение None означает, что даже короткие функции должны быть перенесены на новые строки.
AllowShortFunctionsOnASingleLine: None
  # Указывает, разрешать ли короткие операторы if оставаться на одной строке. Значение false означает, что даже короткие операторы if должны быть перенесены на новые строки.
AllowShortIfStatementsOnASingleLine: false
  # Указывает, разрешать ли короткие циклы for и while оставаться на одной строке. Значение false означает, что даже короткие циклы должны быть перенесены на новые строки.
AllowShortLoopsOnASingleLine: false
  # казывает, делать ли перенос строки после типа возвращаемого значения при определении функции. Значение None означает, что перенос строки не обязателен.
AlwaysBreakAfterDefinitionReturnType: None
  # Указывает, делать ли перенос строки после типа возвращаемого значения при объявлении функции. Значение None означает, что перенос строки не обязателен.
AlwaysBreakAfterReturnType: None
  # Указывает, делать ли перенос строки перед многострочными строками. Значение false означает, что перенос строки не обязателен.
AlwaysBreakBeforeMultilineStrings: false
  # Указывает, делать ли перенос строки в объявлениях шаблонов. Значение false означает, что перенос строки не обязателен.
AlwaysBreakTemplateDeclarations: false
  # Указывает, упаковывать ли аргументы функции на минимальное количество строк. Значение true означает, что аргументы будут упаковываться.
BinPackArguments: true
  # Указывает, упаковывать ли параметры функции на минимальное количество строк. Значение true означает, что параметры будут упаковываться.
BinPackParameters: true
  #  относятся к параметрам обертывания фигурных скобок в конфигурации форматирования кода
BraceWrapping:
    # Определяет, должна ли открывающая фигурная скобка быть на новой строке после объявления класса. Значение false означает, что скобка будет на той же строке, что и объявление класса.
  AfterClass: false
    # Определяет, должна ли открывающая фигурная скобка быть на новой строке после операторов управления (if, for, while, и т.д.). Значение false означает, что скобка будет на той же строке, что и оператор управления.
  AfterControlStatement: false
    # Определяет, должна ли открывающая фигурная скобка быть на новой строке после объявления перечисления (enum). Значение false означает, что скобка будет на той же строке, что и объявление перечисления.
  AfterEnum: false
    # Определяет, должна ли открывающая фигурная скобка быть на новой строке после объявления функции. Значение true означает, что скобка будет на новой строке.
  AfterFunction: false
  # Определяет, должна ли открывающая фигурная скобка быть на новой строке после объявления пространства имен (namespace). Значение true означает, что скобка будет на новой строке.
  AfterNamespace: false
  # Определяет, должна ли открывающая фигурная скобка быть на новой строке после объявления Objective-C. Значение false означает, что скобка будет на той же строке, что и объявление.
  AfterObjCDeclaration: false
  # Определяет, должна ли открывающая фигурная скобка быть на новой строке после объявления структуры (struct). Значение false означает, что скобка будет на той же строке, что и объявление структуры.
  AfterStruct: false
  # Определяет, должна ли открывающая фигурная скобка быть на новой строке после объявления объединения (union). Значение false означает, что скобка будет на той же строке, что и объявление объединения.
  AfterUnion: false
  # Определяет, должна ли открывающая фигурная скобка быть на новой строке после блока extern. Значение false означает, что скобка будет на той же строке, что и блок extern.
  AfterExternBlock: false
  # Определяет, должна ли открывающая фигурная скобка быть на новой строке перед блоком catch. Значение false означает, что скобка будет на той же строке, что и блок catch.
  BeforeCatch: false
  # Определяет, должна ли открывающая фигурная скобка быть на новой строке перед блоком else. Значение false означает, что скобка будет на той же строке, что и блок else.
  BeforeElse: false
  # Определяет, должны ли фигурные скобки быть отступлены. Значение false означает, что скобки не будут отступлены.
  IndentBraces: false
  # Определяет, должны ли пустые функции быть разнесены на несколько строк. Значение true означает, что пустые функции будут разнесены
  SplitEmptyFunction: false
  # Определяет, должны ли пустые структуры (struct), классы или объединения (union) быть разнесены на несколько строк. Значение true означает, что пустые записи будут разнесены
  SplitEmptyRecord: false
  # Определяет, должны ли пустые пространства имен (namespace) быть разнесены на несколько строк. Значение true означает, что пустые пространства имен будут разнесены
  SplitEmptyNamespace: false

# Определяет, где ставить перенос строки относительно бинарных операторов (+, -, *, / и т.д.). Значение None означает, что перенос строки будет после оператора
BreakBeforeBinaryOperators: None
# Указывает, где вставлять перенос строки перед открывающими фигурными скобками {. Значение Custom позволяет задавать более тонкую настройку для различных конструкций (например, классов, функций).
BreakBeforeBraces: Custom
# Определяет, ставить ли перенос строки перед запятой при перечислении наследования. Значение false означает, что перенос строки не ставится.
BreakBeforeInheritanceComma: false
# Указывает, ставить ли перенос строки перед тернарным оператором ? :. Значение false означает, что перенос строки не ставится.
BreakBeforeTernaryOperators: false
# Определяет, ставить ли перенос строки перед запятой в инициализаторах конструктора. Значение false означает, что перенос строки не ставится.
BreakConstructorInitializersBeforeComma: false
# Определяет, где ставить перенос строки в инициализаторах конструктора. Значение BeforeComma означает, что перенос строки будет перед запятой.
BreakConstructorInitializers: BeforeComma
# Указывает, ставить ли перенос строки после аннотаций полей в Java. Значение false означает, что перенос строки не ставится.
# BreakAfterJavaFieldAnnotations: false
# Определяет, разрывать ли строковые литералы на несколько строк, если они слишком длинные. Значение false означает, что строковые литералы не разрываются.
BreakStringLiterals: false
# Устанавливает максимальное количество символов в строке.
ColumnLimit: 80
# Указывает регулярное выражение для обнаружения прагм-комментариев, которые не должны изменяться при форматировании. Значение '^ IWYU pragma:' означает, что комментарии, начинающиеся с IWYU pragma, не будут изменены.
CommentPragmas: '^ IWYU pragma:'
# Указывает, использовать ли компактное представление пространств имен. Значение false означает, что компактное представление не используется.
CompactNamespaces: false
# Указывает, должны ли все инициализаторы конструктора быть на одной строке или каждый на новой строке. Значение false означает, что инициализаторы могут быть на нескольких строках, но не все на одной.
ConstructorInitializerAllOnOneLineOrOnePerLine: false
# Определяет ширину отступа для инициализаторов конструктора. Значение 8 означает отступ в 8 пробелов.
ConstructorInitializerIndentWidth: 8
# Определяет ширину отступа для продолжения строки. Значение 8 означает отступ в 8 пробелов.
ContinuationIndentWidth: 8
# Определяет, использовать ли стиль списков в фигурных скобках, как в C++11. Значение false означает, что этот стиль не используется.
Cpp11BracedListStyle: false
# Определяет, автоматически ли определять выравнивание указателей. Значение false означает, что автоматическое определение не используется.
DerivePointerAlignment: false
# Указывает, отключено ли форматирование кода. Значение false означает, что форматирование включено.
DisableFormat: false
# Указывает, использовать ли экспериментальную функцию автоматического определения упаковки. Значение false означает, что эта функция не используется.
ExperimentalAutoDetectBinPacking: false
# Определяет, добавлять ли комментарии к закрывающим фигурным скобкам пространств имен. Значение false означает, что такие комментарии не добавляются.
FixNamespaceComments: false